{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/supabase-logger.ts"],"sourcesContent":["type LogLevel = 'info' | 'warn' | 'error' | 'debug'\r\n\r\ninterface SupabaseLogEntry {\r\n  timestamp: string\r\n  level: LogLevel\r\n  operation: string\r\n  table?: string\r\n  userId?: string\r\n  duration?: number\r\n  details?: any\r\n  error?: any\r\n}\r\n\r\nclass SupabaseLogger {\r\n  private logs: SupabaseLogEntry[] = []\r\n  private maxLogs = 100 // Keep only last 100 logs\r\n\r\n  private formatTimestamp(): string {\r\n    return new Date().toISOString()\r\n  }\r\n\r\n  private addLog(entry: SupabaseLogEntry) {\r\n    this.logs.push(entry)\r\n    \r\n    // Keep only the most recent logs\r\n    if (this.logs.length > this.maxLogs) {\r\n      this.logs = this.logs.slice(-this.maxLogs)\r\n    }\r\n\r\n    // Console output with appropriate styling\r\n    const emoji = {\r\n      info: 'ℹ️',\r\n      warn: '⚠️',\r\n      error: '❌',\r\n      debug: '🔍'\r\n    }\r\n\r\n    const prefix = `${emoji[entry.level]} [SUPABASE ${entry.level.toUpperCase()}]`\r\n    const message = `${prefix} ${entry.operation}`\r\n    \r\n    switch (entry.level) {\r\n      case 'error':\r\n        console.error(message, entry.details || entry.error)\r\n        break\r\n      case 'warn':\r\n        console.warn(message, entry.details)\r\n        break\r\n      case 'debug':\r\n        console.debug(message, entry.details)\r\n        break\r\n      default:\r\n        console.log(message, entry.details)\r\n    }\r\n  }\r\n\r\n  // Log successful database operations\r\n  logOperation(operation: string, table: string, details?: any, duration?: number) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'info',\r\n      operation: `${operation} on ${table}`,\r\n      table,\r\n      duration,\r\n      details\r\n    })\r\n  }\r\n\r\n  // Log authentication events\r\n  logAuth(event: string, userId?: string, details?: any) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'info',\r\n      operation: `Auth: ${event}`,\r\n      userId,\r\n      details\r\n    })\r\n  }\r\n\r\n  // Log errors with context\r\n  logError(operation: string, error: any, context?: any) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'error',\r\n      operation: `Error: ${operation}`,\r\n      error,\r\n      details: context\r\n    })\r\n  }\r\n\r\n  // Log warnings\r\n  logWarning(operation: string, message: string, details?: any) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'warn',\r\n      operation,\r\n      details: { message, ...details }\r\n    })\r\n  }\r\n\r\n  // Log debug information (only in development)\r\n  logDebug(operation: string, details?: any) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      this.addLog({\r\n        timestamp: this.formatTimestamp(),\r\n        level: 'debug',\r\n        operation,\r\n        details\r\n      })\r\n    }\r\n  }\r\n\r\n  // Log connection events\r\n  logConnection(status: 'connecting' | 'connected' | 'disconnected' | 'failed', details?: any) {\r\n    const level: LogLevel = status === 'failed' ? 'error' : status === 'disconnected' ? 'warn' : 'info'\r\n    \r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level,\r\n      operation: `Connection ${status}`,\r\n      details\r\n    })\r\n  }\r\n\r\n  // Get recent logs\r\n  getRecentLogs(count: number = 10): SupabaseLogEntry[] {\r\n    return this.logs.slice(-count)\r\n  }\r\n\r\n  // Get logs by level\r\n  getLogsByLevel(level: LogLevel): SupabaseLogEntry[] {\r\n    return this.logs.filter(log => log.level === level)\r\n  }\r\n\r\n  // Clear logs\r\n  clearLogs() {\r\n    this.logs = []\r\n    console.log('🧹 Supabase logs cleared')\r\n  }\r\n\r\n  // Export logs for debugging\r\n  exportLogs(): string {\r\n    return JSON.stringify(this.logs, null, 2)\r\n  }\r\n\r\n  // Performance monitoring\r\n  startTimer(operation: string): () => void {\r\n    const startTime = performance.now()\r\n    \r\n    return () => {\r\n      const duration = performance.now() - startTime\r\n      this.logDebug(`Performance: ${operation}`, { duration: `${duration.toFixed(2)}ms` })\r\n      return duration\r\n    }\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const supabaseLogger = new SupabaseLogger()\r\n\r\n// Convenience functions\r\nexport const logSupabaseOperation = (operation: string, table: string, details?: any, duration?: number) => {\r\n  supabaseLogger.logOperation(operation, table, details, duration)\r\n}\r\n\r\nexport const logSupabaseAuth = (event: string, userId?: string, details?: any) => {\r\n  supabaseLogger.logAuth(event, userId, details)\r\n}\r\n\r\nexport const logSupabaseError = (operation: string, error: any, context?: any) => {\r\n  supabaseLogger.logError(operation, error, context)\r\n}\r\n\r\nexport const logSupabaseWarning = (operation: string, message: string, details?: any) => {\r\n  supabaseLogger.logWarning(operation, message, details)\r\n}\r\n\r\nexport const logSupabaseDebug = (operation: string, details?: any) => {\r\n  supabaseLogger.logDebug(operation, details)\r\n}\r\n\r\nexport const logSupabaseConnection = (status: 'connecting' | 'connected' | 'disconnected' | 'failed', details?: any) => {\r\n  supabaseLogger.logConnection(status, details)\r\n}\r\n\r\n// Hook for React components to access logs\r\nexport const useSupabaseLogs = () => {\r\n  return {\r\n    getRecentLogs: (count?: number) => supabaseLogger.getRecentLogs(count),\r\n    getLogsByLevel: (level: LogLevel) => supabaseLogger.getLogsByLevel(level),\r\n    clearLogs: () => supabaseLogger.clearLogs(),\r\n    exportLogs: () => supabaseLogger.exportLogs()\r\n  }\r\n}\r\n\r\nexport default supabaseLogger\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/supabase.ts"],"sourcesContent":["import { createClient, SupabaseClient } from '@supabase/supabase-js'\r\nimport { logSupabaseConnection, logSupabaseError, logSupabaseDebug } from './supabase-logger'\r\nimport type { Database } from '@/types/database'\r\n\r\n// Environment variables\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n\r\n// Validate environment variables\r\nif (!supabaseUrl) {\r\n  const errorMsg = 'Missing NEXT_PUBLIC_SUPABASE_URL'\r\n  logSupabaseError('initialization', new Error(errorMsg))\r\n  throw new Error(errorMsg)\r\n}\r\n\r\nif (!supabaseAnonKey) {\r\n  const errorMsg = 'Missing NEXT_PUBLIC_SUPABASE_ANON_KEY'\r\n  logSupabaseError('initialization', new Error(errorMsg))\r\n  throw new Error(errorMsg)\r\n}\r\n\r\n// Log connection attempt\r\nlogSupabaseConnection('connecting', {\r\n  url: supabaseUrl,\r\n  keyPreview: supabaseAnonKey.substring(0, 20) + '...'\r\n})\r\n\r\n// Create Supabase client\r\nexport const supabase: SupabaseClient<Database> = createClient(supabaseUrl, supabaseAnonKey, {\r\n  auth: {\r\n    persistSession: true,\r\n    autoRefreshToken: true,\r\n    detectSessionInUrl: true\r\n  },\r\n  db: {\r\n    schema: 'public'\r\n  },\r\n  global: {\r\n    headers: {\r\n      'X-Client-Info': 'Nirvana-Municipal-Platform'\r\n    }\r\n  }\r\n})\r\n\r\n// Connection validation function\r\nexport const validateSupabaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    logSupabaseDebug('Starting connection validation')\r\n    \r\n    // Test the connection by making a simple query\r\n    const { data, error } = await supabase\r\n      .from('_health_check')\r\n      .select('*')\r\n      .limit(1)\r\n\r\n    if (error) {\r\n      // If health check table doesn't exist, try a different approach\r\n      if (error.code === 'PGRST116' || error.message.includes('does not exist')) {\r\n        logSupabaseDebug('Health check table not found, testing with auth instead')\r\n        \r\n        // Test with auth session\r\n        const { data: session, error: authError } = await supabase.auth.getSession()\r\n        \r\n        if (authError) {\r\n          logSupabaseError('auth_connection_test', authError)\r\n          return false\r\n        }\r\n        \r\n        logSupabaseConnection('connected', {\r\n          method: 'auth_test',\r\n          hasActiveSession: !!session.session\r\n        })\r\n        return true\r\n      } else {\r\n        logSupabaseError('health_check', error)\r\n        return false\r\n      }\r\n    }\r\n\r\n    logSupabaseConnection('connected', {\r\n      method: 'health_check',\r\n      responseData: data\r\n    })\r\n    return true\r\n\r\n  } catch (error) {\r\n    logSupabaseError('connection_validation', error)\r\n    return false\r\n  }\r\n}\r\n\r\n// Auto-validate connection on import (only in development)\r\nif (process.env.NODE_ENV === 'development') {\r\n  validateSupabaseConnection().then((isValid) => {\r\n    if (isValid) {\r\n      logSupabaseConnection('connected', { autoValidation: true })\r\n    } else {\r\n      logSupabaseConnection('failed', { autoValidation: true })\r\n    }\r\n  })\r\n}\r\n\r\n// Export types for TypeScript\r\nexport type { SupabaseClient } from '@supabase/supabase-js'\r\nexport type { Database } from '@/types/database'\r\n\r\n// Helper function to log database operations (deprecated - use logger directly)\r\nexport const logDatabaseOperation = (operation: string, table: string, details?: any) => {\r\n  logSupabaseDebug(`Database Operation: ${operation.toUpperCase()} on ${table}`, details)\r\n}\r\n\r\n// Helper function to handle Supabase errors with logging\r\nexport const handleSupabaseError = (error: any, context: string) => {\r\n  logSupabaseError(context, error)\r\n  \r\n  // Return user-friendly error message\r\n  return {\r\n    error: true,\r\n    message: error.message || 'An unexpected error occurred',\r\n    code: error.code\r\n  }\r\n}\r\n\r\nexport default supabase\r\n"],"names":[],"mappings":";;;;;;;AAKoB;AALpB;AACA;;;AAGA,wBAAwB;AACxB,MAAM;AACN,MAAM;AAEN,iCAAiC;AACjC,uCAAkB;;AAIlB;AAEA,uCAAsB;;AAItB;AAEA,yBAAyB;AACzB,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,cAAc;IAClC,KAAK;IACL,YAAY,gBAAgB,SAAS,CAAC,GAAG,MAAM;AACjD;AAGO,MAAM,WAAqC,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa,iBAAiB;IAC3F,MAAM;QACJ,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;IACtB;IACA,IAAI;QACF,QAAQ;IACV;IACA,QAAQ;QACN,SAAS;YACP,iBAAiB;QACnB;IACF;AACF;AAGO,MAAM,6BAA6B;IACxC,IAAI;QACF,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE;QAEjB,+CAA+C;QAC/C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,KAAK,CAAC;QAET,IAAI,OAAO;YACT,gEAAgE;YAChE,IAAI,MAAM,IAAI,KAAK,cAAc,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBACzE,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE;gBAEjB,yBAAyB;gBACzB,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;gBAE1E,IAAI,WAAW;oBACb,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,wBAAwB;oBACzC,OAAO;gBACT;gBAEA,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa;oBACjC,QAAQ;oBACR,kBAAkB,CAAC,CAAC,QAAQ,OAAO;gBACrC;gBACA,OAAO;YACT,OAAO;gBACL,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,gBAAgB;gBACjC,OAAO;YACT;QACF;QAEA,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa;YACjC,QAAQ;YACR,cAAc;QAChB;QACA,OAAO;IAET,EAAE,OAAO,OAAO;QACd,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,yBAAyB;QAC1C,OAAO;IACT;AACF;AAEA,2DAA2D;AAC3D,wCAA4C;IAC1C,6BAA6B,IAAI,CAAC,CAAC;QACjC,IAAI,SAAS;YACX,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa;gBAAE,gBAAgB;YAAK;QAC5D,OAAO;YACL,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,UAAU;gBAAE,gBAAgB;YAAK;QACzD;IACF;AACF;AAOO,MAAM,uBAAuB,CAAC,WAAmB,OAAe;IACrE,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,CAAC,oBAAoB,EAAE,UAAU,WAAW,GAAG,IAAI,EAAE,OAAO,EAAE;AACjF;AAGO,MAAM,sBAAsB,CAAC,OAAY;IAC9C,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS;IAE1B,qCAAqC;IACrC,OAAO;QACL,OAAO;QACP,SAAS,MAAM,OAAO,IAAI;QAC1B,MAAM,MAAM,IAAI;IAClB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/auth.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport type { User } from '@/types/database';\r\n\r\nexport interface AuthUser {\r\n  id: string;\r\n  phone: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\n// Simple authentication service using phone number and common password\r\nexport const authService = {\r\n  // Login with phone number and password\r\n  async login(phone: string, password: string): Promise<{ user: AuthUser | null; error: string | null }> {\r\n    try {\r\n      // For now, we're using a common password \"root\" for all citizens\r\n      if (password !== 'root') {\r\n        return { user: null, error: 'Invalid password' };\r\n      }\r\n\r\n      console.log('Attempting login for phone:', phone);\r\n\r\n      // Automatically add 91 country code if not present\r\n      const phoneWithCountryCode = phone.startsWith('91') ? phone : `91${phone}`;\r\n      console.log('Phone with country code:', phoneWithCountryCode);\r\n\r\n      // Find user by phone number\r\n      const { data: users, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('phone_number', phoneWithCountryCode)\r\n        .limit(1);\r\n\r\n      console.log('Database query result:', { users, error });\r\n\r\n      if (error) {\r\n        console.error('Auth error:', error);\r\n        return { user: null, error: `Authentication failed: ${error.message}` };\r\n      }\r\n\r\n      if (!users || users.length === 0) {\r\n        return { user: null, error: 'User not found. Please check your phone number.' };\r\n      }\r\n\r\n      const user = users[0];\r\n      console.log('Found user:', user);\r\n\r\n      const authUser: AuthUser = {\r\n        id: user.id,\r\n        phone: user.phone_number,\r\n        name: user.name,\r\n        role: user.role\r\n      };\r\n\r\n      // Store user in localStorage for simple session management\r\n      localStorage.setItem('currentUser', JSON.stringify(authUser));\r\n\r\n      return { user: authUser, error: null };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { user: null, error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Get current authenticated user\r\n  getCurrentUser(): AuthUser | null {\r\n    try {\r\n      const userStr = localStorage.getItem('currentUser');\r\n      if (!userStr) return null;\r\n      return JSON.parse(userStr);\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  },\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated(): boolean {\r\n    return this.getCurrentUser() !== null;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAWO,MAAM,cAAc;IACzB,uCAAuC;IACvC,MAAM,OAAM,KAAa,EAAE,QAAgB;QACzC,IAAI;YACF,iEAAiE;YACjE,IAAI,aAAa,QAAQ;gBACvB,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAmB;YACjD;YAEA,QAAQ,GAAG,CAAC,+BAA+B;YAE3C,mDAAmD;YACnD,MAAM,uBAAuB,MAAM,UAAU,CAAC,QAAQ,QAAQ,CAAC,EAAE,EAAE,OAAO;YAC1E,QAAQ,GAAG,CAAC,4BAA4B;YAExC,4BAA4B;YAC5B,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC1C,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB,sBACnB,KAAK,CAAC;YAET,QAAQ,GAAG,CAAC,0BAA0B;gBAAE;gBAAO;YAAM;YAErD,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,eAAe;gBAC7B,OAAO;oBAAE,MAAM;oBAAM,OAAO,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;gBAAC;YACxE;YAEA,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;gBAChC,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAkD;YAChF;YAEA,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,QAAQ,GAAG,CAAC,eAAe;YAE3B,MAAM,WAAqB;gBACzB,IAAI,KAAK,EAAE;gBACX,OAAO,KAAK,YAAY;gBACxB,MAAM,KAAK,IAAI;gBACf,MAAM,KAAK,IAAI;YACjB;YAEA,2DAA2D;YAC3D,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;YAEnD,OAAO;gBAAE,MAAM;gBAAU,OAAO;YAAK;QACvC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;gBAAE,MAAM;gBAAM,OAAO;YAA+B;QAC7D;IACF;IAEA,iCAAiC;IACjC;QACE,IAAI;YACF,MAAM,UAAU,aAAa,OAAO,CAAC;YACrC,IAAI,CAAC,SAAS,OAAO;YACrB,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA,cAAc;IACd;QACE,aAAa,UAAU,CAAC;IAC1B;IAEA,iCAAiC;IACjC;QACE,OAAO,IAAI,CAAC,cAAc,OAAO;IACnC;AACF","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/complaints.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport type { Complaint, User } from '@/types/database';\r\n\r\nexport interface ComplaintWithDetails extends Complaint {\r\n  assignedUser?: User;\r\n  categoryName?: string;\r\n  createdAt: string; // Add this field for dashboard compatibility\r\n}\r\n\r\nexport const complaintService = {\r\n  // Get complaints for a specific user\r\n  async getUserComplaints(userId: string): Promise<{ data: ComplaintWithDetails[] | null; error: string | null }> {\r\n    try {\r\n      const { data: complaints, error } = await supabase\r\n        .from('complaints')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Error fetching complaints:', error);\r\n        return { data: null, error: 'Failed to fetch complaints' };\r\n      }\r\n\r\n      // Map created_at to createdAt for consistency with frontend expectations\r\n      const complaintsWithFormattedDate = complaints?.map(complaint => ({\r\n        ...complaint,\r\n        createdAt: complaint.created_at\r\n      })) || [];\r\n\r\n      return { data: complaintsWithFormattedDate as ComplaintWithDetails[], error: null };\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n      return { data: null, error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Get all complaints (for public dashboard)\r\n  async getAllComplaints(limit: number = 50): Promise<{ data: ComplaintWithDetails[] | null; error: string | null }> {\r\n    try {\r\n      const { data: complaints, error } = await supabase\r\n        .from('complaints')\r\n        .select('*')\r\n        .order('created_at', { ascending: false })\r\n        .limit(limit);\r\n\r\n      if (error) {\r\n        console.error('Error fetching all complaints:', error);\r\n        return { data: null, error: 'Failed to fetch complaints' };\r\n      }\r\n\r\n      // Map created_at to createdAt for consistency with frontend expectations\r\n      const complaintsWithFormattedDate = complaints?.map(complaint => ({\r\n        ...complaint,\r\n        createdAt: complaint.created_at\r\n      })) || [];\r\n\r\n      return { data: complaintsWithFormattedDate as ComplaintWithDetails[], error: null };\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n      return { data: null, error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Get a single complaint by ID\r\n  async getComplaintById(complaintId: string): Promise<{ data: ComplaintWithDetails | null; error: string | null }> {\r\n    try {\r\n      const { data: complaint, error } = await supabase\r\n        .from('complaints')\r\n        .select('*')\r\n        .eq('id', complaintId)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('Error fetching complaint:', error);\r\n        return { data: null, error: 'Failed to fetch complaint' };\r\n      }\r\n\r\n      // Map created_at to createdAt for consistency with frontend expectations\r\n      const complaintWithFormattedDate = {\r\n        ...complaint,\r\n        createdAt: complaint.created_at\r\n      };\r\n\r\n      return { data: complaintWithFormattedDate as ComplaintWithDetails, error: null };\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n      return { data: null, error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Get complaint statistics for a user\r\n  async getUserStats(userId: string): Promise<{ \r\n    total: number; \r\n    pending: number; \r\n    resolved: number; \r\n    avgResolutionTime: string;\r\n    error: string | null;\r\n  }> {\r\n    try {\r\n      const { data: complaints, error } = await supabase\r\n        .from('complaints')\r\n        .select('status')\r\n        .eq('user_id', userId);\r\n\r\n      if (error) {\r\n        console.error('Error fetching stats:', error);\r\n        return { total: 0, pending: 0, resolved: 0, avgResolutionTime: 'N/A', error: 'Failed to fetch statistics' };\r\n      }\r\n\r\n      const total = complaints.length;\r\n      const pending = complaints.filter(c => c.status === 'pending' || c.status === 'in_progress').length;\r\n      const resolved = complaints.filter(c => c.status === 'resolved').length;\r\n\r\n      // Since there's no timestamp data in the schema, we'll show N/A for resolution time\r\n      const avgResolutionTime = 'N/A';\r\n\r\n      return { total, pending, resolved, avgResolutionTime, error: null };\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n      return { total: 0, pending: 0, resolved: 0, avgResolutionTime: 'N/A', error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Get categories\r\n  async getCategories(): Promise<{ data: any[] | null; error: string | null }> {\r\n    try {\r\n      const { data: categories, error } = await supabase\r\n        .from('categories')\r\n        .select('*')\r\n        .order('name');\r\n\r\n      if (error) {\r\n        console.error('Error fetching categories:', error);\r\n        return { data: null, error: 'Failed to fetch categories' };\r\n      }\r\n\r\n      return { data: categories, error: null };\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n      return { data: null, error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Create a new complaint\r\n  async createComplaint(complaintData: {\r\n    title: string;\r\n    description: string;\r\n    category: string;\r\n    location: string;\r\n    priority?: string;\r\n    location_lat?: number;\r\n    location_lng?: number;\r\n    image_url?: string;\r\n  }, userId: string): Promise<{ data: Complaint | null; error: string | null }> {\r\n    try {\r\n      const { data: complaint, error } = await supabase\r\n        .from('complaints')\r\n        .insert({\r\n          title: complaintData.title,\r\n          description: complaintData.description,\r\n          category: complaintData.category,\r\n          location: complaintData.location,\r\n          user_id: userId,\r\n          status: 'pending',\r\n          priority: complaintData.priority || 'medium',\r\n          location_lat: complaintData.location_lat,\r\n          location_lng: complaintData.location_lng,\r\n          image_url: complaintData.image_url,\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('Error creating complaint:', error);\r\n        return { data: null, error: 'Failed to create complaint' };\r\n      }\r\n\r\n      return { data: complaint, error: null };\r\n    } catch (error) {\r\n      console.error('Unexpected error:', error);\r\n      return { data: null, error: 'An unexpected error occurred' };\r\n    }\r\n  }\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/app/citizen/gallery/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  ArrowLeft,\r\n  Grid3X3,\r\n  Image as ImageIcon,\r\n  Calendar,\r\n  MapPin,\r\n  ExternalLink,\r\n  Search,\r\n  Filter,\r\n  Eye\r\n} from 'lucide-react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport { authService } from '@/lib/auth';\r\nimport { complaintService, type ComplaintWithDetails } from '@/lib/complaints';\r\n\r\ninterface MediaItem extends ComplaintWithDetails {\r\n  hasMedia: boolean;\r\n}\r\n\r\nexport default function ComplaintGallery() {\r\n  const [complaints, setComplaints] = useState<MediaItem[]>([]);\r\n  const [filteredComplaints, setFilteredComplaints] = useState<MediaItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [currentUser, setCurrentUser] = useState<any>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [viewMode, setViewMode] = useState<'grid' | 'masonry'>('grid');\r\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const user = authService.getCurrentUser();\r\n    if (!user) {\r\n      router.push('/auth/login');\r\n      return;\r\n    }\r\n    setCurrentUser(user);\r\n    loadUserComplaints(user.id);\r\n  }, [router]);\r\n\r\n  const loadUserComplaints = async (userId: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data: complaintsData, error: complaintsError } = await complaintService.getUserComplaints(userId);\r\n      if (complaintsError) {\r\n        setError(complaintsError);\r\n      } else if (complaintsData) {\r\n        // Filter complaints that have media\r\n        const complaintsWithMedia = complaintsData\r\n          .filter(complaint => complaint.image_url && complaint.image_url.trim() !== '')\r\n          .map(complaint => ({\r\n            ...complaint,\r\n            hasMedia: true\r\n          }));\r\n        \r\n        setComplaints(complaintsWithMedia);\r\n        setFilteredComplaints(complaintsWithMedia);\r\n        console.log('Loaded complaints with media:', complaintsWithMedia);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load complaints');\r\n      console.error('Error loading user complaints:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filter and search functionality\r\n  useEffect(() => {\r\n    let filtered = complaints;\r\n\r\n    // Filter by category\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(complaint => complaint.category === selectedCategory);\r\n    }\r\n\r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(complaint =>\r\n        complaint.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        complaint.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredComplaints(filtered);\r\n  }, [complaints, selectedCategory, searchTerm]);\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-IN', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pending': return 'bg-amber-500';\r\n      case 'in_progress': return 'bg-blue-500';\r\n      case 'resolved': return 'bg-emerald-500';\r\n      case 'closed': return 'bg-red-500';\r\n      default: return 'bg-purple-500';\r\n    }\r\n  };\r\n\r\n  const getUniqueCategories = () => {\r\n    const categories = [...new Set(complaints.map(c => c.category))];\r\n    return categories;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-[#0a0613] via-[#150d27] to-[#0a0613] flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-12 h-12 mx-auto mb-4 border-2 rounded-full border-purple-500/20 border-t-purple-500 animate-spin\"></div>\r\n          <p className=\"text-purple-300\">Loading your gallery...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-[#0a0613] via-[#150d27] to-[#0a0613]\">\r\n      {/* Navigation Header */}\r\n      <nav className=\"sticky top-0 z-10 p-4 border-b bg-purple-500/5 backdrop-blur-sm border-purple-500/20\">\r\n        <div className=\"flex items-center justify-between mx-auto max-w-7xl\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <Link\r\n              href=\"/citizen/dashboard\"\r\n              className=\"flex items-center p-2 text-purple-400 transition-colors rounded-lg hover:text-purple-300 hover:bg-purple-500/10\"\r\n            >\r\n              <ArrowLeft className=\"w-5 h-5\" />\r\n            </Link>\r\n            <h1 className=\"font-serif text-2xl font-normal text-white\">Media Gallery</h1>\r\n            <span className=\"text-purple-300/70\">{filteredComplaints.length} items</span>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center space-x-4\">\r\n            <button\r\n              onClick={() => setViewMode(viewMode === 'grid' ? 'masonry' : 'grid')}\r\n              className=\"p-2 text-purple-400 transition-colors rounded-lg hover:text-purple-300 hover:bg-purple-500/10\"\r\n            >\r\n              <Grid3X3 className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"p-6 mx-auto max-w-7xl\">\r\n        {/* Search and Filter Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6 }}\r\n          className=\"mb-8\"\r\n        >\r\n          <div className=\"flex flex-col gap-4 p-6 border lg:flex-row lg:items-center lg:justify-between bg-purple-500/5 backdrop-blur-sm border-purple-500/20 rounded-xl\">\r\n            {/* Search */}\r\n            <div className=\"relative flex-1 max-w-md\">\r\n              <Search className=\"absolute w-5 h-5 text-purple-400 left-3 top-1/2 transform -translate-y-1/2\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search complaints...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full py-2 pl-10 pr-4 text-white placeholder-purple-300/50 bg-purple-950/30 border border-purple-500/30 rounded-lg focus:outline-none focus:border-purple-400\"\r\n              />\r\n            </div>\r\n\r\n            {/* Category Filter */}\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Filter className=\"w-5 h-5 text-purple-400\" />\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                className=\"px-4 py-2 text-white bg-purple-950/30 border border-purple-500/30 rounded-lg focus:outline-none focus:border-purple-400\"\r\n              >\r\n                <option value=\"all\">All Categories</option>\r\n                {getUniqueCategories().map(category => (\r\n                  <option key={category} value={category}>{category}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Error State */}\r\n        {error && (\r\n          <div className=\"p-6 mb-8\">\r\n            <div className=\"p-4 text-center border rounded-lg border-red-500/30 bg-red-500/10\">\r\n              <p className=\"text-red-400\">{error}</p>\r\n              <button \r\n                onClick={() => currentUser && loadUserComplaints(currentUser.id)}\r\n                className=\"px-4 py-2 mt-2 text-sm text-white transition-colors bg-red-600 rounded-lg hover:bg-red-700\"\r\n              >\r\n                Retry\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Gallery Grid */}\r\n        {!error && filteredComplaints.length > 0 ? (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ duration: 0.6, delay: 0.2 }}\r\n            className={`grid gap-6 ${\r\n              viewMode === 'grid' \r\n                ? 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4' \r\n                : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'\r\n            }`}\r\n          >\r\n            {filteredComplaints.map((complaint, index) => (\r\n              <motion.div\r\n                key={complaint.id}\r\n                initial={{ opacity: 0, scale: 0.9 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                transition={{ duration: 0.4, delay: index * 0.1 }}\r\n                className=\"group relative overflow-hidden border bg-purple-500/5 backdrop-blur-sm border-purple-500/20 rounded-xl hover:border-purple-400/40 transition-all duration-300\"\r\n              >\r\n                {/* Image */}\r\n                <div className=\"relative aspect-square overflow-hidden\">\r\n                  <img\r\n                    src={complaint.image_url}\r\n                    alt={complaint.title}\r\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\r\n                    onError={(e) => {\r\n                      e.currentTarget.src = '/no-image.png';\r\n                    }}\r\n                  />\r\n                  \r\n                  {/* Status Badge */}\r\n                  <div className=\"absolute top-3 left-3\">\r\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium text-white ${getStatusColor(complaint.status)}`}>\r\n                      {complaint.status.replace('-', ' ').toUpperCase()}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Overlay on Hover */}\r\n                  <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center\">\r\n                    <div className=\"flex space-x-3\">\r\n                      <button\r\n                        onClick={() => setSelectedImage(complaint.image_url)}\r\n                        className=\"p-2 bg-white/20 backdrop-blur-sm rounded-full text-white hover:bg-white/30 transition-colors\"\r\n                      >\r\n                        <Eye className=\"w-5 h-5\" />\r\n                      </button>\r\n                      <Link href={`/citizen/complaints/${complaint.id}`}>\r\n                        <button className=\"p-2 bg-white/20 backdrop-blur-sm rounded-full text-white hover:bg-white/30 transition-colors\">\r\n                          <ExternalLink className=\"w-5 h-5\" />\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Content */}\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"text-white font-medium mb-2 line-clamp-2 group-hover:text-purple-300 transition-colors\">\r\n                    {complaint.title}\r\n                  </h3>\r\n                  \r\n                  <div className=\"flex items-center justify-between text-sm text-purple-300/70 mb-3\">\r\n                    <span className=\"flex items-center\">\r\n                      <Calendar className=\"w-4 h-4 mr-1\" />\r\n                      {formatDate(complaint.createdAt)}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center text-sm text-purple-300/70\">\r\n                    <MapPin className=\"w-4 h-4 mr-1\" />\r\n                    <span className=\"truncate\">{complaint.category}</span>\r\n                  </div>\r\n\r\n                  {/* View Complaint Button */}\r\n                  <Link href={`/citizen/complaints/${complaint.id}`}>\r\n                    <button className=\"w-full mt-4 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white text-sm rounded-lg transition-colors\">\r\n                      View Complaint\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        ) : (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.6 }}\r\n            className=\"p-12 text-center border bg-purple-500/5 backdrop-blur-sm border-purple-500/20 rounded-xl\"\r\n          >\r\n            <ImageIcon className=\"w-16 h-16 mx-auto mb-4 text-purple-400\" />\r\n            <h3 className=\"mb-2 text-xl font-medium text-white\">No Media Found</h3>\r\n            <p className=\"mb-6 text-purple-300/70\">\r\n              {searchTerm || selectedCategory !== 'all'\r\n                ? \"No complaints match your current filters.\"\r\n                : \"You haven't submitted any complaints with media yet.\"\r\n              }\r\n            </p>\r\n            <div className=\"flex flex-col gap-3 sm:flex-row sm:justify-center\">\r\n              {(searchTerm || selectedCategory !== 'all') && (\r\n                <button\r\n                  onClick={() => {\r\n                    setSearchTerm('');\r\n                    setSelectedCategory('all');\r\n                  }}\r\n                  className=\"px-6 py-3 text-purple-300 border border-purple-500/30 rounded-lg hover:bg-purple-500/10 transition-colors\"\r\n                >\r\n                  Clear Filters\r\n                </button>\r\n              )}\r\n              <Link href=\"/citizen/report\">\r\n                <button className=\"px-6 py-3 text-white bg-purple-600 rounded-lg hover:bg-purple-700 transition-colors\">\r\n                  Report New Complaint\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Image Modal */}\r\n      {selectedImage && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/80 backdrop-blur-sm\"\r\n          onClick={() => setSelectedImage(null)}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9 }}\r\n            animate={{ scale: 1 }}\r\n            className=\"relative max-w-4xl max-h-[90vh] overflow-hidden rounded-xl\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <img\r\n              src={selectedImage}\r\n              alt=\"Selected complaint\"\r\n              className=\"w-full h-full object-contain\"\r\n              onError={(e) => {\r\n                e.currentTarget.src = '/no-image.png';\r\n              }}\r\n            />\r\n            <button\r\n              onClick={() => setSelectedImage(null)}\r\n              className=\"absolute top-4 right-4 p-2 bg-black/50 backdrop-blur-sm rounded-full text-white hover:bg-black/70 transition-colors\"\r\n            >\r\n              ✕\r\n            </button>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}