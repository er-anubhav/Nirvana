{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/supabase-logger.ts"],"sourcesContent":["type LogLevel = 'info' | 'warn' | 'error' | 'debug'\r\n\r\ninterface SupabaseLogEntry {\r\n  timestamp: string\r\n  level: LogLevel\r\n  operation: string\r\n  table?: string\r\n  userId?: string\r\n  duration?: number\r\n  details?: any\r\n  error?: any\r\n}\r\n\r\nclass SupabaseLogger {\r\n  private logs: SupabaseLogEntry[] = []\r\n  private maxLogs = 100 // Keep only last 100 logs\r\n\r\n  private formatTimestamp(): string {\r\n    return new Date().toISOString()\r\n  }\r\n\r\n  private addLog(entry: SupabaseLogEntry) {\r\n    this.logs.push(entry)\r\n    \r\n    // Keep only the most recent logs\r\n    if (this.logs.length > this.maxLogs) {\r\n      this.logs = this.logs.slice(-this.maxLogs)\r\n    }\r\n\r\n    // Console output with appropriate styling\r\n    const emoji = {\r\n      info: 'ℹ️',\r\n      warn: '⚠️',\r\n      error: '❌',\r\n      debug: '🔍'\r\n    }\r\n\r\n    const prefix = `${emoji[entry.level]} [SUPABASE ${entry.level.toUpperCase()}]`\r\n    const message = `${prefix} ${entry.operation}`\r\n    \r\n    switch (entry.level) {\r\n      case 'error':\r\n        console.error(message, entry.details || entry.error)\r\n        break\r\n      case 'warn':\r\n        console.warn(message, entry.details)\r\n        break\r\n      case 'debug':\r\n        console.debug(message, entry.details)\r\n        break\r\n      default:\r\n        console.log(message, entry.details)\r\n    }\r\n  }\r\n\r\n  // Log successful database operations\r\n  logOperation(operation: string, table: string, details?: any, duration?: number) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'info',\r\n      operation: `${operation} on ${table}`,\r\n      table,\r\n      duration,\r\n      details\r\n    })\r\n  }\r\n\r\n  // Log authentication events\r\n  logAuth(event: string, userId?: string, details?: any) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'info',\r\n      operation: `Auth: ${event}`,\r\n      userId,\r\n      details\r\n    })\r\n  }\r\n\r\n  // Log errors with context\r\n  logError(operation: string, error: any, context?: any) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'error',\r\n      operation: `Error: ${operation}`,\r\n      error,\r\n      details: context\r\n    })\r\n  }\r\n\r\n  // Log warnings\r\n  logWarning(operation: string, message: string, details?: any) {\r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level: 'warn',\r\n      operation,\r\n      details: { message, ...details }\r\n    })\r\n  }\r\n\r\n  // Log debug information (only in development)\r\n  logDebug(operation: string, details?: any) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      this.addLog({\r\n        timestamp: this.formatTimestamp(),\r\n        level: 'debug',\r\n        operation,\r\n        details\r\n      })\r\n    }\r\n  }\r\n\r\n  // Log connection events\r\n  logConnection(status: 'connecting' | 'connected' | 'disconnected' | 'failed', details?: any) {\r\n    const level: LogLevel = status === 'failed' ? 'error' : status === 'disconnected' ? 'warn' : 'info'\r\n    \r\n    this.addLog({\r\n      timestamp: this.formatTimestamp(),\r\n      level,\r\n      operation: `Connection ${status}`,\r\n      details\r\n    })\r\n  }\r\n\r\n  // Get recent logs\r\n  getRecentLogs(count: number = 10): SupabaseLogEntry[] {\r\n    return this.logs.slice(-count)\r\n  }\r\n\r\n  // Get logs by level\r\n  getLogsByLevel(level: LogLevel): SupabaseLogEntry[] {\r\n    return this.logs.filter(log => log.level === level)\r\n  }\r\n\r\n  // Clear logs\r\n  clearLogs() {\r\n    this.logs = []\r\n    console.log('🧹 Supabase logs cleared')\r\n  }\r\n\r\n  // Export logs for debugging\r\n  exportLogs(): string {\r\n    return JSON.stringify(this.logs, null, 2)\r\n  }\r\n\r\n  // Performance monitoring\r\n  startTimer(operation: string): () => void {\r\n    const startTime = performance.now()\r\n    \r\n    return () => {\r\n      const duration = performance.now() - startTime\r\n      this.logDebug(`Performance: ${operation}`, { duration: `${duration.toFixed(2)}ms` })\r\n      return duration\r\n    }\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const supabaseLogger = new SupabaseLogger()\r\n\r\n// Convenience functions\r\nexport const logSupabaseOperation = (operation: string, table: string, details?: any, duration?: number) => {\r\n  supabaseLogger.logOperation(operation, table, details, duration)\r\n}\r\n\r\nexport const logSupabaseAuth = (event: string, userId?: string, details?: any) => {\r\n  supabaseLogger.logAuth(event, userId, details)\r\n}\r\n\r\nexport const logSupabaseError = (operation: string, error: any, context?: any) => {\r\n  supabaseLogger.logError(operation, error, context)\r\n}\r\n\r\nexport const logSupabaseWarning = (operation: string, message: string, details?: any) => {\r\n  supabaseLogger.logWarning(operation, message, details)\r\n}\r\n\r\nexport const logSupabaseDebug = (operation: string, details?: any) => {\r\n  supabaseLogger.logDebug(operation, details)\r\n}\r\n\r\nexport const logSupabaseConnection = (status: 'connecting' | 'connected' | 'disconnected' | 'failed', details?: any) => {\r\n  supabaseLogger.logConnection(status, details)\r\n}\r\n\r\n// Hook for React components to access logs\r\nexport const useSupabaseLogs = () => {\r\n  return {\r\n    getRecentLogs: (count?: number) => supabaseLogger.getRecentLogs(count),\r\n    getLogsByLevel: (level: LogLevel) => supabaseLogger.getLogsByLevel(level),\r\n    clearLogs: () => supabaseLogger.clearLogs(),\r\n    exportLogs: () => supabaseLogger.exportLogs()\r\n  }\r\n}\r\n\r\nexport default supabaseLogger\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/supabase.ts"],"sourcesContent":["import { createClient, SupabaseClient } from '@supabase/supabase-js'\r\nimport { logSupabaseConnection, logSupabaseError, logSupabaseDebug } from './supabase-logger'\r\nimport type { Database } from '@/types/database'\r\n\r\n// Environment variables\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n\r\n// Validate environment variables\r\nif (!supabaseUrl) {\r\n  const errorMsg = 'Missing NEXT_PUBLIC_SUPABASE_URL'\r\n  logSupabaseError('initialization', new Error(errorMsg))\r\n  throw new Error(errorMsg)\r\n}\r\n\r\nif (!supabaseAnonKey) {\r\n  const errorMsg = 'Missing NEXT_PUBLIC_SUPABASE_ANON_KEY'\r\n  logSupabaseError('initialization', new Error(errorMsg))\r\n  throw new Error(errorMsg)\r\n}\r\n\r\n// Log connection attempt\r\nlogSupabaseConnection('connecting', {\r\n  url: supabaseUrl,\r\n  keyPreview: supabaseAnonKey.substring(0, 20) + '...'\r\n})\r\n\r\n// Create Supabase client\r\nexport const supabase: SupabaseClient<Database> = createClient(supabaseUrl, supabaseAnonKey, {\r\n  auth: {\r\n    persistSession: true,\r\n    autoRefreshToken: true,\r\n    detectSessionInUrl: true\r\n  },\r\n  db: {\r\n    schema: 'public'\r\n  },\r\n  global: {\r\n    headers: {\r\n      'X-Client-Info': 'Nirvana-Municipal-Platform'\r\n    }\r\n  }\r\n})\r\n\r\n// Connection validation function\r\nexport const validateSupabaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    logSupabaseDebug('Starting connection validation')\r\n    \r\n    // Test the connection by making a simple query\r\n    const { data, error } = await supabase\r\n      .from('_health_check')\r\n      .select('*')\r\n      .limit(1)\r\n\r\n    if (error) {\r\n      // If health check table doesn't exist, try a different approach\r\n      if (error.code === 'PGRST116' || error.message.includes('does not exist')) {\r\n        logSupabaseDebug('Health check table not found, testing with auth instead')\r\n        \r\n        // Test with auth session\r\n        const { data: session, error: authError } = await supabase.auth.getSession()\r\n        \r\n        if (authError) {\r\n          logSupabaseError('auth_connection_test', authError)\r\n          return false\r\n        }\r\n        \r\n        logSupabaseConnection('connected', {\r\n          method: 'auth_test',\r\n          hasActiveSession: !!session.session\r\n        })\r\n        return true\r\n      } else {\r\n        logSupabaseError('health_check', error)\r\n        return false\r\n      }\r\n    }\r\n\r\n    logSupabaseConnection('connected', {\r\n      method: 'health_check',\r\n      responseData: data\r\n    })\r\n    return true\r\n\r\n  } catch (error) {\r\n    logSupabaseError('connection_validation', error)\r\n    return false\r\n  }\r\n}\r\n\r\n// Auto-validate connection on import (only in development)\r\nif (process.env.NODE_ENV === 'development') {\r\n  validateSupabaseConnection().then((isValid) => {\r\n    if (isValid) {\r\n      logSupabaseConnection('connected', { autoValidation: true })\r\n    } else {\r\n      logSupabaseConnection('failed', { autoValidation: true })\r\n    }\r\n  })\r\n}\r\n\r\n// Export types for TypeScript\r\nexport type { SupabaseClient } from '@supabase/supabase-js'\r\nexport type { Database } from '@/types/database'\r\n\r\n// Helper function to log database operations (deprecated - use logger directly)\r\nexport const logDatabaseOperation = (operation: string, table: string, details?: any) => {\r\n  logSupabaseDebug(`Database Operation: ${operation.toUpperCase()} on ${table}`, details)\r\n}\r\n\r\n// Helper function to handle Supabase errors with logging\r\nexport const handleSupabaseError = (error: any, context: string) => {\r\n  logSupabaseError(context, error)\r\n  \r\n  // Return user-friendly error message\r\n  return {\r\n    error: true,\r\n    message: error.message || 'An unexpected error occurred',\r\n    code: error.code\r\n  }\r\n}\r\n\r\nexport default supabase\r\n"],"names":[],"mappings":";;;;;;;AAKoB;AALpB;AACA;;;AAGA,wBAAwB;AACxB,MAAM;AACN,MAAM;AAEN,iCAAiC;AACjC,uCAAkB;;AAIlB;AAEA,uCAAsB;;AAItB;AAEA,yBAAyB;AACzB,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,cAAc;IAClC,KAAK;IACL,YAAY,gBAAgB,SAAS,CAAC,GAAG,MAAM;AACjD;AAGO,MAAM,WAAqC,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa,iBAAiB;IAC3F,MAAM;QACJ,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;IACtB;IACA,IAAI;QACF,QAAQ;IACV;IACA,QAAQ;QACN,SAAS;YACP,iBAAiB;QACnB;IACF;AACF;AAGO,MAAM,6BAA6B;IACxC,IAAI;QACF,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE;QAEjB,+CAA+C;QAC/C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,KAAK,CAAC;QAET,IAAI,OAAO;YACT,gEAAgE;YAChE,IAAI,MAAM,IAAI,KAAK,cAAc,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB;gBACzE,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE;gBAEjB,yBAAyB;gBACzB,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;gBAE1E,IAAI,WAAW;oBACb,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,wBAAwB;oBACzC,OAAO;gBACT;gBAEA,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa;oBACjC,QAAQ;oBACR,kBAAkB,CAAC,CAAC,QAAQ,OAAO;gBACrC;gBACA,OAAO;YACT,OAAO;gBACL,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,gBAAgB;gBACjC,OAAO;YACT;QACF;QAEA,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa;YACjC,QAAQ;YACR,cAAc;QAChB;QACA,OAAO;IAET,EAAE,OAAO,OAAO;QACd,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,yBAAyB;QAC1C,OAAO;IACT;AACF;AAEA,2DAA2D;AAC3D,wCAA4C;IAC1C,6BAA6B,IAAI,CAAC,CAAC;QACjC,IAAI,SAAS;YACX,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,aAAa;gBAAE,gBAAgB;YAAK;QAC5D,OAAO;YACL,CAAA,GAAA,mIAAA,CAAA,wBAAqB,AAAD,EAAE,UAAU;gBAAE,gBAAgB;YAAK;QACzD;IACF;AACF;AAOO,MAAM,uBAAuB,CAAC,WAAmB,OAAe;IACrE,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,CAAC,oBAAoB,EAAE,UAAU,WAAW,GAAG,IAAI,EAAE,OAAO,EAAE;AACjF;AAGO,MAAM,sBAAsB,CAAC,OAAY;IAC9C,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS;IAE1B,qCAAqC;IACrC,OAAO;QACL,OAAO;QACP,SAAS,MAAM,OAAO,IAAI;QAC1B,MAAM,MAAM,IAAI;IAClB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/auth.ts"],"sourcesContent":["import { supabase } from './supabase';\r\nimport type { User } from '@/types/database';\r\n\r\nexport interface AuthUser {\r\n  id: string;\r\n  phone: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\n// Simple authentication service using phone number and common password\r\nexport const authService = {\r\n  // Login with phone number and password\r\n  async login(phone: string, password: string): Promise<{ user: AuthUser | null; error: string | null }> {\r\n    try {\r\n      // For now, we're using a common password \"root\" for all citizens\r\n      if (password !== 'root') {\r\n        return { user: null, error: 'Invalid password' };\r\n      }\r\n\r\n      console.log('Attempting login for phone:', phone);\r\n\r\n      // Automatically add 91 country code if not present\r\n      const phoneWithCountryCode = phone.startsWith('91') ? phone : `91${phone}`;\r\n      console.log('Phone with country code:', phoneWithCountryCode);\r\n\r\n      // Find user by phone number\r\n      const { data: users, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('phone_number', phoneWithCountryCode)\r\n        .limit(1);\r\n\r\n      console.log('Database query result:', { users, error });\r\n\r\n      if (error) {\r\n        console.error('Auth error:', error);\r\n        return { user: null, error: `Authentication failed: ${error.message}` };\r\n      }\r\n\r\n      if (!users || users.length === 0) {\r\n        return { user: null, error: 'User not found. Please check your phone number.' };\r\n      }\r\n\r\n      const user = users[0];\r\n      console.log('Found user:', user);\r\n\r\n      const authUser: AuthUser = {\r\n        id: user.id,\r\n        phone: user.phone_number,\r\n        name: user.name,\r\n        role: user.role\r\n      };\r\n\r\n      // Store user in localStorage for simple session management\r\n      localStorage.setItem('currentUser', JSON.stringify(authUser));\r\n\r\n      return { user: authUser, error: null };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { user: null, error: 'An unexpected error occurred' };\r\n    }\r\n  },\r\n\r\n  // Get current authenticated user\r\n  getCurrentUser(): AuthUser | null {\r\n    try {\r\n      const userStr = localStorage.getItem('currentUser');\r\n      if (!userStr) return null;\r\n      return JSON.parse(userStr);\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  },\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated(): boolean {\r\n    return this.getCurrentUser() !== null;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAWO,MAAM,cAAc;IACzB,uCAAuC;IACvC,MAAM,OAAM,KAAa,EAAE,QAAgB;QACzC,IAAI;YACF,iEAAiE;YACjE,IAAI,aAAa,QAAQ;gBACvB,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAmB;YACjD;YAEA,QAAQ,GAAG,CAAC,+BAA+B;YAE3C,mDAAmD;YACnD,MAAM,uBAAuB,MAAM,UAAU,CAAC,QAAQ,QAAQ,CAAC,EAAE,EAAE,OAAO;YAC1E,QAAQ,GAAG,CAAC,4BAA4B;YAExC,4BAA4B;YAC5B,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC1C,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB,sBACnB,KAAK,CAAC;YAET,QAAQ,GAAG,CAAC,0BAA0B;gBAAE;gBAAO;YAAM;YAErD,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,eAAe;gBAC7B,OAAO;oBAAE,MAAM;oBAAM,OAAO,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;gBAAC;YACxE;YAEA,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;gBAChC,OAAO;oBAAE,MAAM;oBAAM,OAAO;gBAAkD;YAChF;YAEA,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,QAAQ,GAAG,CAAC,eAAe;YAE3B,MAAM,WAAqB;gBACzB,IAAI,KAAK,EAAE;gBACX,OAAO,KAAK,YAAY;gBACxB,MAAM,KAAK,IAAI;gBACf,MAAM,KAAK,IAAI;YACjB;YAEA,2DAA2D;YAC3D,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;YAEnD,OAAO;gBAAE,MAAM;gBAAU,OAAO;YAAK;QACvC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;gBAAE,MAAM;gBAAM,OAAO;YAA+B;QAC7D;IACF;IAEA,iCAAiC;IACjC;QACE,IAAI;YACF,MAAM,UAAU,aAAa,OAAO,CAAC;YACrC,IAAI,CAAC,SAAS,OAAO;YACrB,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA,cAAc;IACd;QACE,aAAa,UAAU,CAAC;IAC1B;IAEA,iCAAiC;IACjC;QACE,OAAO,IAAI,CAAC,cAAc,OAAO;IACnC;AACF","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/lib/debug.ts"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\n// Debug utility to check database connection and see available users\r\nexport const debugService = {\r\n  // Test database connection\r\n  async testConnection(): Promise<{ success: boolean; message: string }> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('count')\r\n        .limit(1);\r\n\r\n      if (error) {\r\n        return { success: false, message: `Connection failed: ${error.message}` };\r\n      }\r\n\r\n      return { success: true, message: 'Database connection successful' };\r\n    } catch (error) {\r\n      return { success: false, message: `Unexpected error: ${error}` };\r\n    }\r\n  },\r\n\r\n  // List all users (phone numbers only for privacy)\r\n  async listUsers(): Promise<{ users: any[] | null; error: string | null }> {\r\n    try {\r\n      const { data: users, error } = await supabase\r\n        .from('users')\r\n        .select('id, name, phone_number, role')\r\n        .order('name', { ascending: true });\r\n\r\n      if (error) {\r\n        console.error('Error fetching users:', error);\r\n        return { users: null, error: error.message };\r\n      }\r\n\r\n      return { users, error: null };\r\n    } catch (error) {\r\n      return { users: null, error: `Unexpected error: ${error}` };\r\n    }\r\n  },\r\n\r\n  // Search for a specific phone number\r\n  async findUserByPhone(phone: string): Promise<{ user: any | null; error: string | null }> {\r\n    try {\r\n      const { data: users, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('phone_number', phone);\r\n\r\n      if (error) {\r\n        return { user: null, error: error.message };\r\n      }\r\n\r\n      return { user: users && users.length > 0 ? users[0] : null, error: null };\r\n    } catch (error) {\r\n      return { user: null, error: `Unexpected error: ${error}` };\r\n    }\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,eAAe;IAC1B,2BAA2B;IAC3B,MAAM;QACJ,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC,SACP,KAAK,CAAC;YAET,IAAI,OAAO;gBACT,OAAO;oBAAE,SAAS;oBAAO,SAAS,CAAC,mBAAmB,EAAE,MAAM,OAAO,EAAE;gBAAC;YAC1E;YAEA,OAAO;gBAAE,SAAS;gBAAM,SAAS;YAAiC;QACpE,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,SAAS;gBAAO,SAAS,CAAC,kBAAkB,EAAE,OAAO;YAAC;QACjE;IACF;IAEA,kDAAkD;IAClD,MAAM;QACJ,IAAI;YACF,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC1C,IAAI,CAAC,SACL,MAAM,CAAC,gCACP,KAAK,CAAC,QAAQ;gBAAE,WAAW;YAAK;YAEnC,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,yBAAyB;gBACvC,OAAO;oBAAE,OAAO;oBAAM,OAAO,MAAM,OAAO;gBAAC;YAC7C;YAEA,OAAO;gBAAE;gBAAO,OAAO;YAAK;QAC9B,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,OAAO;gBAAM,OAAO,CAAC,kBAAkB,EAAE,OAAO;YAAC;QAC5D;IACF;IAEA,qCAAqC;IACrC,MAAM,iBAAgB,KAAa;QACjC,IAAI;YACF,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC1C,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB;YAEtB,IAAI,OAAO;gBACT,OAAO;oBAAE,MAAM;oBAAM,OAAO,MAAM,OAAO;gBAAC;YAC5C;YAEA,OAAO;gBAAE,MAAM,SAAS,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,GAAG;gBAAM,OAAO;YAAK;QAC1E,EAAE,OAAO,OAAO;YACd,OAAO;gBAAE,MAAM;gBAAM,OAAO,CAAC,kBAAkB,EAAE,OAAO;YAAC;QAC3D;IACF;AACF","debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ertri/Desktop/GRUI/Frontend/src/app/auth/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Phone, Lock, Eye, EyeOff, Database } from 'lucide-react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { authService } from '@/lib/auth';\r\nimport { debugService } from '@/lib/debug';\r\nimport { SupabaseConnectionDebug } from '@/components/debug/SupabaseConnectionDebug';\r\n\r\nexport default function LoginPage() {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errors, setErrors] = useState<{phone?: string; password?: string; general?: string}>({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [debugInfo, setDebugInfo] = useState<string>('');\r\n  const router = useRouter();\r\n\r\n  const handleDebug = async () => {\r\n    try {\r\n      const { users, error } = await debugService.listUsers();\r\n      if (error) {\r\n        setDebugInfo(`Error: ${error}`);\r\n      } else if (users) {\r\n        const userInfo = users.map(u => \r\n          `${u.name}: ${u.phone_number || u.phone} (${u.role})`\r\n        ).join('\\n');\r\n        setDebugInfo(`Available users:\\n${userInfo}`);\r\n        console.log('Available users:', users);\r\n      }\r\n    } catch (err) {\r\n      setDebugInfo(`Debug error: ${err}`);\r\n    }\r\n  };\r\n\r\n  const validatePhone = (phone: string) => {\r\n    const phoneRegex = /^[6-9]\\d{9}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n    \r\n    // Basic validation\r\n    const newErrors: {phone?: string; password?: string; general?: string} = {};\r\n    \r\n    if (!phoneNumber) {\r\n      newErrors.phone = 'Phone number is required';\r\n    } else if (!validatePhone(phoneNumber)) {\r\n      newErrors.phone = 'Please enter a valid 10-digit Indian mobile number';\r\n    }\r\n    \r\n    if (!password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n    \r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const { user, error } = await authService.login(phoneNumber, password);\r\n      \r\n      if (error) {\r\n        setErrors({ general: error });\r\n      } else if (user) {\r\n        // Successful login - redirect to dashboard\r\n        router.push('/citizen/dashboard');\r\n      }\r\n    } catch (error) {\r\n      setErrors({ general: 'An unexpected error occurred' });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-[#0a0613] via-[#150d27] to-[#0a0613] flex items-center justify-center p-4\">\r\n      {/* Background decoration */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"absolute w-full h-full rounded-full -top-1/2 -right-1/2 bg-purple-500/5 blur-3xl\" />\r\n        <div className=\"absolute w-full h-full rounded-full -bottom-1/2 -left-1/2 bg-purple-600/5 blur-3xl\" />\r\n      </div>\r\n      \r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6 }}\r\n        className=\"relative z-10 w-full max-w-md\"\r\n      >\r\n        {/* Logo and branding */}\r\n        <div className=\"mb-8 text-center\">\r\n          <motion.h1 \r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.2 }}\r\n            className=\"mb-2 font-serif text-4xl text-white\"\r\n          >\r\n            Nirvana\r\n          </motion.h1>\r\n          <p className=\"text-lg text-purple-300/70\">\r\n            AI-powered E-Governance Complaint Management\r\n          </p>\r\n        </div>\r\n\r\n        {/* Login form */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"p-8 border bg-purple-500/5 backdrop-blur-sm border-purple-500/20 rounded-xl\"\r\n        >\r\n          <h2 className=\"mb-6 font-serif text-2xl text-center text-white\">\r\n            Citizen Login\r\n          </h2>\r\n          \r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Phone Number Input */}\r\n            <div>\r\n              <label className=\"block mb-2 text-sm text-purple-300\">\r\n                Mobile Number\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Phone className=\"absolute w-5 h-5 text-purple-400 transform -translate-y-1/2 left-3 top-1/2\" />\r\n                <input\r\n                  type=\"tel\"\r\n                  value={phoneNumber}\r\n                  onChange={(e) => setPhoneNumber(e.target.value.replace(/\\D/g, '').slice(0, 10))}\r\n                  placeholder=\"Enter 10-digit mobile number\"\r\n                  className={`w-full pl-12 pr-4 py-3 bg-purple-950/20 border rounded-lg text-white placeholder-purple-300/50 focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all ${\r\n                    errors.phone ? 'border-red-500' : 'border-purple-500/30'\r\n                  }`}\r\n                  maxLength={10}\r\n                />\r\n              </div>\r\n              {errors.phone && (\r\n                <motion.p\r\n                  initial={{ opacity: 0, y: -10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"mt-1 text-sm text-red-400\"\r\n                >\r\n                  {errors.phone}\r\n                </motion.p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Password Input */}\r\n            <div>\r\n              <label className=\"block mb-2 text-sm text-purple-300\">\r\n                Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Lock className=\"absolute w-5 h-5 text-purple-400 transform -translate-y-1/2 left-3 top-1/2\" />\r\n                <input\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Enter your password\"\r\n                  className={`w-full pl-12 pr-12 py-3 bg-purple-950/20 border rounded-lg text-white placeholder-purple-300/50 focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all ${\r\n                    errors.password ? 'border-red-500' : 'border-purple-500/30'\r\n                  }`}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute text-purple-400 transform -translate-y-1/2 right-3 top-1/2 hover:text-purple-300\"\r\n                >\r\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\r\n                </button>\r\n              </div>\r\n              {errors.password && (\r\n                <motion.p\r\n                  initial={{ opacity: 0, y: -10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"mt-1 text-sm text-red-400\"\r\n                >\r\n                  {errors.password}\r\n                </motion.p>\r\n              )}\r\n            </div>\r\n\r\n            {/* General Error Message */}\r\n            {errors.general && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: -10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"p-3 text-sm text-center text-red-400 border rounded-lg border-red-500/30 bg-red-500/10\"\r\n              >\r\n                {errors.general}\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* Password Hint */}\r\n            <div className=\"text-sm text-center text-purple-300/60\">\r\n              <p>Use password: <span className=\"font-mono text-purple-400\">root</span></p>\r\n            </div>\r\n\r\n            {/* Debug Button */}\r\n            <div className=\"text-center\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleDebug}\r\n                className=\"flex items-center justify-center px-3 py-2 mx-auto text-xs text-purple-400 transition-colors border rounded-lg border-purple-500/30 hover:text-purple-300 hover:border-purple-500/50\"\r\n              >\r\n                <Database className=\"w-4 h-4 mr-2\" />\r\n                Show Available Users\r\n              </button>\r\n            </div>\r\n\r\n            {/* Debug Info */}\r\n            {debugInfo && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: -10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"p-3 text-xs text-center text-purple-300 whitespace-pre-line border rounded-lg border-purple-500/30 bg-purple-500/10\"\r\n              >\r\n                {debugInfo}\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* Submit Button */}\r\n            <motion.button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n              className=\"w-full px-4 py-3 text-white transition-all bg-purple-600 rounded-lg hover:bg-purple-700 disabled:bg-purple-600/50 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-transparent\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center justify-center\">\r\n                  <div className=\"w-5 h-5 mr-2 border-2 rounded-full border-white/20 border-t-white animate-spin\" />\r\n                  Signing In...\r\n                </div>\r\n              ) : (\r\n                'Sign In'\r\n              )}\r\n            </motion.button>\r\n          </form>\r\n\r\n          {/* Additional options */}\r\n          <div className=\"mt-6 space-y-3 text-center\">\r\n            <button className=\"text-sm text-purple-400 transition-colors hover:text-purple-300\">\r\n              Forgot Password?\r\n            </button>\r\n            <div className=\"text-sm text-purple-300/50\">\r\n              Don't have an account?{' '}\r\n              <button className=\"text-purple-400 transition-colors hover:text-purple-300\">\r\n                Register here\r\n              </button>\r\n            </div>\r\n            <div className=\"text-sm text-purple-300/50\">\r\n              <button \r\n                onClick={() => router.push('/public')}\r\n                className=\"text-purple-400 transition-colors hover:text-purple-300\"\r\n              >\r\n                View Public Dashboard →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n\r\n      {/* Debug Component */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.3 }}\r\n        className=\"fixed bottom-4 right-4 w-96 max-w-[calc(100vw-2rem)]\"\r\n      >\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}